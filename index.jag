<%
//Module objects
var absolute = require ('modules/absolute.js').mvc;
var goose = require('modules/goose.js').goose;
var deviceModule = require('modules/device.js').device;
var userModule = require('modules/user.js').user;
var notificationModule = require('modules/notification.js').notification;
var storeModule = require('modules/store.js').store;
var webconsoleModule = require('modules/webconsole.js').webconsole;
var dashboardModule = require('modules/dashboard.js').dashboard;
var featureModule = require('modules/feature.js').feature;
var helpers = require('modules/helpers.js');
var common = require('modules/common.js');
// Routers
var userRouter = require('api/userRouter.js').user;
var featureRouter = require('api/featureRouter.js').feature;
var permissionRouter = require('api/permissionRouter.js').permission;
var policyRouter = require('api/policyRouter.js').policy;
var deviceRouter = require('api/deviceRouter.js').device;
var notificationRouter = require('api/notificationRouter.js').notification;
var groupRouter = require('api/groupRouter.js').group;
var reportRouter = require('api/reportRouter.js').reports;
var appMRouter = require('api/appManager.js').appm;
var appRouter = require('api/appRouter.js').app;
var platformRouter = require('api/platformRouter.js').platform;   
   

var GOOSE_CONFIGS = {
    CONTEXT : "/emm/api/", 
    AUTH_SUPPORT : true
};
var ABSOLUTE_CONFIGS = {
    SERVER_URL:"/emm/",
    IGNORE:[],
    API:"api",
    AUTH_SUPPORT: true
};
var EMM_USER_SESSION = "emmConsoleUser";

var log = new Log();
var configs = require('config/emm.js').config();
var db = common.getDatabase();
var current_user = session.get(EMM_USER_SESSION);
var current_user_roles = undefined;
if(current_user != undefined){
	current_user_roles = current_user.roles;

}
GOOSE_CONFIGS.AUTH_USER_ROLES = current_user_roles;
ABSOLUTE_CONFIGS.AUTH_USER_ROLES = current_user_roles;

var router = new goose(GOOSE_CONFIGS);

ABSOLUTE_CONFIGS.ROUTER = router;

var mvc = new absolute(ABSOLUTE_CONFIGS);

//Setting up the authorization roles
router.setupRules(require('/config/route.json').apiRoutes);
mvc.setupRules(require('/config/route.json').pageRoutes);

var device = new deviceModule();
var user = new userModule();
var notification = new notificationModule();
var webconsole = new webconsoleModule(db);
var dashboard = new dashboardModule(db);
var feature = new featureModule(db);
var store = new storeModule(db);

var userRouterInstance = new userRouter(db,router);
var featureRouterInstance = new featureRouter(db,router);
var permissionRouterInstance = new permissionRouter(db,router);
var policyRouterInstance = new policyRouter(db,router);
var deviceRouterInstance = new deviceRouter(db, router);
var notificationRouterInstance = new notificationRouter(db, router);
var groupRouterInstance = new groupRouter(db,router);
var reportRouterInstance = new reportRouter (db,router);
var appMRouterInstance = new appMRouter (db,router);
var platformRouterInstance = new platformRouter(db,router);   
   
   
// New router method
appRouter.route(db, router);

router.post('store/users/devices', function(ctx){
    common.handleError(this, ctx, function(){
        var result = store.getAllDevicesFromEmail(ctx);
        print(result);
    });
});


router.post('store/users/apps', function(ctx){
    common.handleError(this, ctx, function(){
        var result = store.getAllAppFromDevice(ctx);
    });
});


router.get('dashboard/devices/all/percentage/byos', function(ctx){
    
    var result = dashboard.getDeviceCountByOS(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('dashboard/devices/all/percentage/byownership', function(ctx){
    var result = dashboard.getDeviceCountByOwnership(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('dashboard/all/info', function(ctx){
    var result = dashboard.getDashboardInfo(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('dashboard/devices/android/info', function(ctx){
    var result = dashboard.getAllAndroidDevices(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('dashboard/devices/ios/info', function(ctx){
    var result = dashboard.getAlliOSDevices(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});
router.get('dashboard/policies/compliance', function(ctx){
    var result = notification.getPolicyComplianceDevicesCount(ctx); //should be move to dashborad.js
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('webconsole/devices', function(ctx){
    var result = webconsole.getDevicesCountAndUserCountForAllGroups(ctx);
	response.content = result;
});

router.get('webconsole/listDevices', function(ctx){
    var result = webconsole.getDevices(ctx);
    print(result);
});

router.get('webconsole/allUsers', function(ctx){
    var result = webconsole.getAllUsers(ctx);
    print(result);
});

router.get('features', function(ctx){
    var result = feature.getAllFeatures(ctx);
    if(result!= null && result != undefined){
        response.content = result;
        response.status = 200;
    }else{
        response.status = 404;
    }
});

router.get('find', function(ctx){
    var driver = require('/modules/driver.js').driver;
    var query = driver.execute("SELECT * FROM PLATFORMS WHERE id=?", "1");
    // log.info(query);
});
helpers.registerHelpers(mvc);
mvc.route(request);
%>
